"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.readableAsyncIterator = void 0;
function makePipe() {
    const puts = [];
    const takes = [];
    let closed = false;
    function put(n) {
        if (closed) {
            return;
        }
        const nextInLine = takes.shift();
        if (nextInLine) {
            nextInLine({ done: false, value: n });
        }
        else {
            puts.push(n);
        }
    }
    function close() {
        closed = true;
    }
    function next() {
        const next = puts.shift();
        if (next) {
            return Promise.resolve({ done: false, value: next });
        }
        if (closed) {
            return Promise.resolve({ done: true, value: undefined });
        }
        return new Promise(resolve => takes.push(resolve));
    }
    return { put, next, close };
}
function readableAsyncIterator(readable, by) {
    const { next, ...pipe } = makePipe();
    let remainder = by.initial();
    const dataListener = (chunk) => {
        let [items, nextRemainder] = by.split(chunk, remainder);
        items.forEach(pipe.put);
        remainder = nextRemainder;
    };
    const endListener = () => {
        const lastItem = by.last(remainder);
        if (lastItem !== null) {
            pipe.put(lastItem);
        }
        cleanUp();
    };
    readable.on("data", dataListener);
    readable.on("end", endListener);
    function cleanUp() {
        pipe.close();
        readable.removeListener("data", dataListener);
        readable.removeListener("end", endListener);
    }
    function iteratorReturn() {
        cleanUp();
        return Promise.resolve({ done: true, value: undefined });
    }
    return { next, return: iteratorReturn };
}
exports.readableAsyncIterator = readableAsyncIterator;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVhZGFibGVBc3luY0l0ZXJhdG9yLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic3JjL3JlYWRhYmxlQXN5bmNJdGVyYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFFQSxTQUFTLFFBQVE7SUFDZixNQUFNLElBQUksR0FBUSxFQUFFLENBQUM7SUFDckIsTUFBTSxLQUFLLEdBQXVDLEVBQUUsQ0FBQztJQUNyRCxJQUFJLE1BQU0sR0FBRyxLQUFLLENBQUM7SUFFbkIsU0FBUyxHQUFHLENBQUMsQ0FBSTtRQUNmLElBQUksTUFBTSxFQUFFO1lBQ1YsT0FBTztTQUNSO1FBQ0QsTUFBTSxVQUFVLEdBQUcsS0FBSyxDQUFDLEtBQUssRUFBRSxDQUFDO1FBQ2pDLElBQUksVUFBVSxFQUFFO1lBQ2QsVUFBVSxDQUFDLEVBQUUsSUFBSSxFQUFFLEtBQUssRUFBRSxLQUFLLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztTQUN2QzthQUFNO1lBQ0wsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNkO0lBQ0gsQ0FBQztJQUVELFNBQVMsS0FBSztRQUNaLE1BQU0sR0FBRyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUVELFNBQVMsSUFBSTtRQUNYLE1BQU0sSUFBSSxHQUFHLElBQUksQ0FBQyxLQUFLLEVBQUUsQ0FBQztRQUMxQixJQUFJLElBQUksRUFBRTtZQUNSLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUM7U0FDdEQ7UUFDRCxJQUFJLE1BQU0sRUFBRTtZQUNWLE9BQU8sT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLFNBQVMsRUFBRSxDQUFDLENBQUM7U0FDMUQ7UUFFRCxPQUFPLElBQUksT0FBTyxDQUFvQixPQUFPLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQztJQUN4RSxDQUFDO0lBRUQsT0FBTyxFQUFFLEdBQUcsRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUM7QUFDOUIsQ0FBQztBQVFELFNBQWdCLHFCQUFxQixDQUNuQyxRQUFrQixFQUNsQixFQUEwQjtJQUUxQixNQUFNLEVBQUUsSUFBSSxFQUFFLEdBQUcsSUFBSSxFQUFFLEdBQUcsUUFBUSxFQUFLLENBQUM7SUFFeEMsSUFBSSxTQUFTLEdBQUcsRUFBRSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBRTdCLE1BQU0sWUFBWSxHQUFHLENBQUMsS0FBYSxFQUFFLEVBQUU7UUFDckMsSUFBSSxDQUFDLEtBQUssRUFBRSxhQUFhLENBQUMsR0FBRyxFQUFFLENBQUMsS0FBSyxDQUFDLEtBQUssRUFBRSxTQUFTLENBQUMsQ0FBQztRQUV4RCxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQztRQUV4QixTQUFTLEdBQUcsYUFBYSxDQUFDO0lBQzVCLENBQUMsQ0FBQztJQUVGLE1BQU0sV0FBVyxHQUFHLEdBQUcsRUFBRTtRQUN2QixNQUFNLFFBQVEsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ3BDLElBQUksUUFBUSxLQUFLLElBQUksRUFBRTtZQUNyQixJQUFJLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1NBQ3BCO1FBRUQsT0FBTyxFQUFFLENBQUM7SUFDWixDQUFDLENBQUM7SUFFRixRQUFRLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztJQUNsQyxRQUFRLENBQUMsRUFBRSxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUVoQyxTQUFTLE9BQU87UUFDZCxJQUFJLENBQUMsS0FBSyxFQUFFLENBQUM7UUFDYixRQUFRLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRSxZQUFZLENBQUMsQ0FBQztRQUM5QyxRQUFRLENBQUMsY0FBYyxDQUFDLEtBQUssRUFBRSxXQUFXLENBQUMsQ0FBQztJQUM5QyxDQUFDO0lBRUQsU0FBUyxjQUFjO1FBQ3JCLE9BQU8sRUFBRSxDQUFDO1FBQ1YsT0FBTyxPQUFPLENBQUMsT0FBTyxDQUFDLEVBQUUsSUFBSSxFQUFFLElBQUksRUFBRSxLQUFLLEVBQUUsU0FBUyxFQUFFLENBQUMsQ0FBQztJQUMzRCxDQUFDO0lBRUQsT0FBTyxFQUFFLElBQUksRUFBRSxNQUFNLEVBQUUsY0FBYyxFQUFFLENBQUM7QUFDMUMsQ0FBQztBQXhDRCxzREF3Q0MifQ==